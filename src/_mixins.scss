@use 'sass:math';
@use './functions.scss' as fnc;

@mixin load-suisse-font($family: 'intl', $weight: 'regular') {
	$path: '@surveyplanet/styles/src/fonts/suisse/#{$family}/#{$weight}';

	$name: 'Suisse #{fnc.capitalize($family)}';

	@if $weight != 'regular' {
		$name: '#{$name} #{fnc.capitalize($weight)}';
	}

	@font-face {
		font-family: $name;
		src: url($path + '.woff2') format('woff2'), url($path + '.woff') format('woff'),
			url($path + '.ttf') format('truetype');
	}
}

@mixin spin($r: 360deg) {
	@keyframes spin {
		from {
			transform: rotate(0deg);
		}
		to {
			transform: rotate($r);
		}
	}
}

@mixin pseudo($display: block, $position: absolute, $content: '') {
	content: $content;
	position: $position;
	display: $display;
}

@mixin triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
	@include pseudo($position: $position);
	width: 0;
	height: 0;
	@if $round {
		border-radius: 3px;
	}
	@if $direction == down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - math.round(math.div($size, 2.5));
	} @else if $direction == up {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
		margin-bottom: 0 - math.round(math.div($size, 2.5));
	} @else if $direction == right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		margin-right: -$size;
	} @else if $direction == left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		margin-left: -$size;
	}
}

// private variable
$-breakpoints: (
	'phone': 400px,
	'phone-wide': 480px,
	'phablet': 560px,
	'tablet-small': 640px,
	'tablet': 768px,
	'tablet-wide': 1024px,
	'desktop': 1248px,
	'desktop-wide': 1440px
);

@mixin mq($device, $type: min) {
	@if map_has_key($-breakpoints, $device) {
		$device: map_get($-breakpoints, $device);
		@if $type == max {
			$device: $device - 1px;
		}
		@media only screen and (#{$type}-width: $device) {
			@content;
		}
	}
}

@mixin truncate($width) {
	max-width: $width;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

@mixin fade($direction: 'out') {
	@if $direction == 'out' {
		visibility: hidden;
		opacity: 0;
		transition: visibility 1s, opacity 1s;
	} @else if $direction == 'in' {
		visibility: visible;
		opacity: 1;
		transition: visibility 1s, opacity 1s;
	}
}
